{"version":3,"sources":["config/var.js","components/minesweeper/mine.js","shared/button/index.js","shared/modal/index.js","components/minesweeper/index.js","pages/minesweeper/index.js","App.js","reportWebVitals.js","index.js"],"names":["COLOR","numOfMines","1","2","3","4","5","6","7","8","MineWrapper","styled","div","css","isVisible","isBoom","Cell","props","text","Mine","x","y","isFlag","isMine","isWin","onContextMenu","onClick","numOfNeighbourMines","cellText","element","ButtonWrapper","Button","children","ModalWrapper","Modal","okText","imgSrc","className","src","alt","BoardWrapper","sizeOfBoard","Minesweeper","useState","mines","setMines","isGameStart","setIsGameStart","isShowGameOver","setIsShowGameOver","reduce","sumOfRow","rowOfMines","sumOfColumn","targetMine","modalText","modalOkText","modalImage","initialBoard","useCallback","updatedMines","i","lineOfMine","j","push","handleNumOfNeighbourMines","count","onExpandVisibleMine","dx","dy","queue","length","shift","yOfQueue","xOfQueue","k","onUserClick","onCloseGame","minePool","xOfMine","Math","floor","random","yOfMine","find","coord","forEach","mine","onStartGame","onRightClick","preventDefault","useEffect","map","row","column","PageWrapper","MinesweeperPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77e89239.chunk.js","sourcesContent":["export const COLOR = {\n  numOfMines: {\n    1: 'blue',\n    2: 'green',\n    3: 'red',\n    4: 'purple',\n    5: 'maroon',\n    6: 'turquoise',\n    7: 'black',\n    8: 'white',\n  }\n};\n","import styled, { css } from 'styled-components';\nimport { COLOR } from '../../config/var';\n\nconst MineWrapper = styled.div`\n    width: 50px;\n    height: 50px;\n    border: 1px black solid;\n    border-radius: 5px;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 20px;\n    font-weight: 600;\n    ${css`\n        background-color: ${({ isVisible, isBoom }) => (isBoom ? 'red' : (isVisible ? '#dff7f5' : '#0092e0'))};\n    `}\n`;\n\nconst Cell = styled.div`\n  ${(props) => (\n    css` color: ${COLOR.numOfMines[props.text] || 'black'}`\n  )}\n`;\n\nconst cellText = (isFlag, isMine, isVisible, isWin, numOfNeighbourMines) => {\n  if (isFlag) {\n    return 'ðŸš©';\n  } else if ((isMine && isWin) || (isMine && isVisible)) {\n    return 'ðŸ’£';\n  } else if (isWin || isVisible) {\n    return numOfNeighbourMines || '';\n  } else {\n    return '';\n  }\n};\n\nconst Mine = ({\n  x, y, isFlag, isMine, isVisible, isWin, onContextMenu, onClick, numOfNeighbourMines\n}) => {\n  const isBoom = isVisible && isMine;\n  const text = cellText(isFlag, isMine, isVisible, isWin, numOfNeighbourMines);\n  return (\n    <MineWrapper\n      isVisible={ isVisible }\n      isBoom={ isBoom }\n      onClick={ () => onClick(x, y, isMine, isFlag) }\n      onContextMenu={ (element) => onContextMenu(element, x, y, isFlag) }\n    >\n      <Cell text={ text }>{text}</Cell>\n    </MineWrapper>\n  );\n};\n\nexport default Mine;\n","import styled from 'styled-components';\n\nconst ButtonWrapper = styled.div`\n  display: inline-block;\n  padding: 10px 15px;\n  border-radius: 15px;\n  background-color: #00304c;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n`;\n\nconst Button = (props) => {\n  return <ButtonWrapper { ...props }>{props.children}</ButtonWrapper>;\n};\nexport default Button;\n","import styled from 'styled-components';\nimport Button from '../button';\n\nconst ModalWrapper = styled.div`\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 1000;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .background {\n        width: 100vw;\n        height: 100vh;\n        opacity: 0.6;\n        background-color: black;\n    }\n    .body {\n        overflow: hidden;\n        position: absolute;\n        padding: 20px;\n        background-color: white;\n        border-radius: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n    .text {\n        font-size: 24px;\n        font-weight: 600;\n        margin: 10px;\n    }\n    .img {\n      margin: 10px;\n      height: 200px;\n    }\n`;\nconst Modal = ({\n  text, okText, onClick, isVisible, imgSrc\n}) => {\n  return (\n    <>\n      {isVisible && (\n        <ModalWrapper>\n          <div className=\"background\" />\n          <div className=\"body\">\n            <p className=\"text\">{text}</p>\n            <img className=\"img\" src={ imgSrc } alt=\"modal\" />\n            <Button onClick={ onClick }>{okText || 'OK'}</Button>\n          </div>\n        </ModalWrapper>\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n","import { useState, useEffect, useCallback } from 'react';\nimport styled, { css } from 'styled-components';\nimport Mine from './mine';\nimport Modal from '../../shared/modal';\n\nconst BoardWrapper = styled.div`\n    ${({ sizeOfBoard }) => (\n    css`\n        display: grid;\n        max-width: calc(${sizeOfBoard} * 55px);\n        grid-gap: 5px;\n        grid-template-columns: repeat(${sizeOfBoard}, 1fr);\n        grid-template-rows: repeat(${sizeOfBoard}, 1fr);\n      `\n  )}\n`;\n\nconst Minesweeper = ({ sizeOfBoard, numOfMines }) => {\n  const [mines, setMines] = useState([[]]);\n  const [isGameStart, setIsGameStart] = useState(false);\n  const [isShowGameOver, setIsShowGameOver] = useState(false);\n  const isWin = numOfMines === (sizeOfBoard ** 2 - mines.reduce((sumOfRow, rowOfMines) => sumOfRow + rowOfMines.reduce((sumOfColumn, targetMine) => sumOfColumn + (targetMine.isVisible ? 1 : 0), 0), 0));\n  const modalText = isWin ? 'You win!!' : (isShowGameOver ? 'You clicked the mine!!' : '');\n  const modalOkText = isWin ? 'Play again' : (isShowGameOver ? 'OK' : '');\n  const modalImage = isWin ? 'https://media3.giphy.com/media/qYGvebgOKGygdQgflY/giphy.gif?cid=ecf05e47i0qme2wi67ynw5qtcvav9yxuzpgvg3cvwimwob4o&rid=giphy.gif' : isShowGameOver ? 'https://media0.giphy.com/media/11KSh7jeHLEp5m/giphy.gif?cid=ecf05e47o4nh1dozkvly9x6bfcbv19gbhqqui2jw1zb9bcem&rid=giphy.gif' : '';\n  const initialBoard = useCallback(() => {\n    let updatedMines = [];\n    for (let i = 0; i < sizeOfBoard; i++) {\n      let lineOfMine = [];\n      for (let j = 0; j < sizeOfBoard; j++) {\n        lineOfMine.push({\n          x: j,\n          y: i,\n          isMine: false,\n          isVisible: false,\n        });\n      }\n      updatedMines.push(lineOfMine);\n    }\n    setMines(updatedMines);\n    setIsShowGameOver(false);\n    setIsGameStart(false);\n  }, [sizeOfBoard]);\n\n  const onStartGame = (x, y) => {\n    let minePool = [];\n    while (minePool.length < numOfMines) {\n      const xOfMine = Math.floor(Math.random() * sizeOfBoard);\n      const yOfMine = Math.floor(Math.random() * sizeOfBoard);\n      if (xOfMine !== x && yOfMine !== y && !minePool.find((coord) => coord.x === xOfMine && coord.y === yOfMine)) {\n        minePool.push({ x: xOfMine, y: yOfMine });\n      }\n    }\n    let updatedMines = [...mines];\n    minePool.forEach((mine) => {\n      updatedMines[mine.y][mine.x] = {\n        ...updatedMines[mine.y][mine.x],\n        isMine: true,\n      };\n    });\n    setMines(updatedMines);\n    setIsGameStart(true);\n    handleNumOfNeighbourMines();\n    onExpandVisibleMine(x, y);\n  };\n\n  const onCloseGame = (x, y) => {\n    let updatedMines = [...mines];\n    updatedMines[y][x] = {\n      ...updatedMines[y][x],\n      isVisible: true,\n    };\n    setMines(updatedMines);\n    setIsShowGameOver(true);\n  };\n\n  const handleNumOfNeighbourMines = () => {\n    let updatedMines = [...mines];\n    for (let y = 0; y < sizeOfBoard; y++) {\n      for (let x = 0; x < sizeOfBoard; x++) {\n        let count = 0;\n        (y - 1 >= 0) && (x - 1 >= 0) && mines[y - 1][x - 1].isMine && count++;\n        (y - 1 >= 0) && mines[y - 1][x].isMine && count++;\n        (y - 1 >= 0) && (x + 1 < sizeOfBoard) && mines[y - 1][x + 1].isMine && count++;\n        (y + 1 < sizeOfBoard) && (x - 1 >= 0) && mines[y + 1][x - 1].isMine && count++;\n        (y + 1 < sizeOfBoard) && mines[y + 1][x].isMine && count++;\n        (y + 1 < sizeOfBoard) && (x + 1 < sizeOfBoard) && mines[y + 1][x + 1].isMine && count++;\n        (x - 1 >= 0) && mines[y][x - 1].isMine && count++;\n        (x + 1 < sizeOfBoard) && mines[y][x + 1].isMine && count++;\n        updatedMines[y][x] = {\n          ...mines[y][x],\n          numOfNeighbourMines: count,\n        };\n      }\n    }\n    setMines(updatedMines);\n  };\n\n  const onExpandVisibleMine = (x, y) => {\n    let updatedMines = [...mines];\n    const dx = [1, -1, 0, 0];\n    const dy = [0, 0, 1, -1];\n    let queue = [[y, x]];\n    while (queue.length > 0) {\n      let [yOfQueue, xOfQueue] = queue.shift();\n      const isNotOutOfBound = (xOfQueue >= 0 && xOfQueue < sizeOfBoard && yOfQueue >= 0 && yOfQueue < sizeOfBoard);\n      if (isNotOutOfBound) {\n        const isEmptyMine = !(updatedMines[yOfQueue][xOfQueue].numOfNeighbourMines > 0) && !(updatedMines[yOfQueue][xOfQueue].isVisible);\n        if (isEmptyMine) {\n          for (let k = 0; k < dx.length; k++) {\n            queue.push([yOfQueue + dy[k], xOfQueue + dx[k]]);\n          }\n        }\n        updatedMines[yOfQueue][xOfQueue].isVisible = true;\n      }\n    }\n    setMines(updatedMines);\n  };\n\n  const onUserClick = (x, y, isMine, isFlag) => {\n    if (isGameStart && !isFlag) {\n      if (isMine) {\n        onCloseGame(x, y);\n      } else {\n        onExpandVisibleMine(x, y);\n      }\n    } else if (!isFlag) {\n      onStartGame(x, y);\n    }\n  };\n\n  const onRightClick = (element, x, y) => {\n    element.preventDefault();\n    let updatedMines = [...mines];\n    updatedMines[y][x] = {\n      ...updatedMines[y][x],\n      isFlag: true,\n    };\n    setMines(updatedMines);\n  };\n\n  useEffect(() => {\n    initialBoard();\n  }, [initialBoard]);\n\n  return (\n    <BoardWrapper sizeOfBoard={ sizeOfBoard }>\n      { mines.map((lineOfMine, row) => lineOfMine.map((mine, column) => (\n        <Mine\n          isWin={ isWin }\n          key={ `${column}-${row}` }\n          onClick={ onUserClick }\n          onContextMenu={ onRightClick }\n          { ...mine }\n        />\n      ))) }\n      <Modal\n        text={ modalText }\n        okText={ modalOkText }\n        imgSrc={ modalImage }\n        isVisible={ isShowGameOver || isWin }\n        onClick={ () => initialBoard(sizeOfBoard) }\n      />\n    </BoardWrapper>\n  );\n};\n\nexport default Minesweeper;\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport MinesweeperBoard from '../../components/minesweeper';\n\nconst PageWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 5vh 5vw;\n    background-color: #d1fdac;\n    height: 100vh;\n    .title {\n        font-size: 32px;\n        font-weight: 500;\n        margin: 20px;\n    }\n`;\nconst MinesweeperPage = () => {\n  const [sizeOfBoard] = useState(6);\n  const [numOfMines] = useState(4);\n  return (\n    <PageWrapper>\n      <h1 className=\"title\">Minesweeper</h1>\n      <MinesweeperBoard sizeOfBoard={ sizeOfBoard } numOfMines={ numOfMines } />\n    </PageWrapper>\n  );\n};\n\nexport default MinesweeperPage;\n","import MinesweeperPage from './pages/minesweeper';\n\nconst App = () => {\n  return (\n    <>\n      <MinesweeperPage />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}