{"version":3,"sources":["components/minesweeper/mine.js","shared/button/index.js","shared/modal/index.js","components/minesweeper/index.js","pages/minesweeper/index.js","App.js","reportWebVitals.js","index.js"],"names":["MineWrapper","styled","div","css","props","isVisible","Mine","isWin","isMine","numOfNeighbourMines","isGameStart","onStartGame","onCloseGame","x","y","onExpandVisibleMine","onClick","ButtonWrapper","Button","children","ModalWrapper","Modal","text","okText","className","BoardWrapper","sizeOfBoard","Minesweeper","numOfMines","useState","setIsGameStart","mines","setMines","isShowGameOver","setIsShowGameOver","reduce","sumOfRow","rowOfMines","sumOfColumn","targetMine","modalText","modalOkText","initialBoard","useCallback","updatedMines","i","lineOfMine","j","push","minePool","xOfMine","Math","floor","random","yOfMine","find","coord","length","forEach","mine","handleNumOfNeighbourMines","console","log","count","dx","dy","queue","shift","yOfQueue","xOfQueue","isValid","k","useEffect","map","row","column","PageWrapper","MinesweeperPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7c0d208.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nconst MineWrapper = styled.div`\n    width: 50px;\n    height: 50px;\n    border: 1px black solid;\n    border-radius: 5px;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 20px;\n    font-weight: 600;\n    ${css`\n        background-color: ${(props) => (props.isVisible ? '#dff7f5' : '#0092e0')};\n    `}\n`;\n// #b2edec\nconst onClick = (x, y, isGameStart, isMine, onStartGame, onCloseGame, onExpandVisibleMine) => {\n  if (isGameStart) {\n    if (isMine) {\n      onCloseGame();\n    } else {\n      onExpandVisibleMine(x, y);\n    }\n  } else {\n    onStartGame(x, y);\n  }\n};\n\nconst Mine = ({\n  isWin, isMine, isVisible, numOfNeighbourMines, isGameStart, onStartGame, onCloseGame, x, y, onExpandVisibleMine\n}) => {\n  return (\n    <MineWrapper isVisible={ isVisible } onClick={ () => onClick(x, y, isGameStart, isMine, onStartGame, onCloseGame, onExpandVisibleMine) }>\n      <>\n        { isWin ? (\n          isMine\n            ? <div>ðŸ’£</div>\n            : <div>{numOfNeighbourMines !== 0 ? numOfNeighbourMines : ''}</div>\n        )\n          : (isVisible && (isMine ? <div>ðŸ’£</div> : <div>{numOfNeighbourMines !== 0 ? numOfNeighbourMines : ''}</div>))\n        }\n      </>\n    </MineWrapper>\n  );\n};\n\nexport default Mine;\n","import styled from 'styled-components';\n\nconst ButtonWrapper = styled.div`\n  display: inline-block;\n  padding: 10px 15px;\n  border-radius: 15px;\n  background-color: #00304c;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n`;\n\nconst Button = (props) => {\n  return <ButtonWrapper { ...props }>{props.children}</ButtonWrapper>;\n};\nexport default Button;\n","import styled from 'styled-components';\nimport Button from '../button';\n\nconst ModalWrapper = styled.div`\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 1000;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .background {\n        width: 100vw;\n        height: 100vh;\n        opacity: 0.6;\n        background-color: black;\n    }\n    .body {\n        overflow: hidden;\n        position: absolute;\n        padding: 20px;\n        background-color: white;\n        border-radius: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n    .text {\n        font-size: 24px;\n        font-weight: 600;\n        margin: 20px;\n    }\n`;\nconst Modal = ({\n  text, okText, onClick, isVisible\n}) => {\n  return (\n    <>\n      {isVisible && (\n        <ModalWrapper>\n          <div className=\"background\" />\n          <div className=\"body\">\n            <p className=\"text\">{text}</p>\n            <Button onClick={ onClick }>{okText || 'OK'}</Button>\n          </div>\n        </ModalWrapper>\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n","import { useState, useEffect, useCallback } from 'react';\nimport styled, { css } from 'styled-components';\nimport Mine from './mine';\nimport Modal from '../../shared/modal';\n\nconst BoardWrapper = styled.div`\n    display: grid;\n    max-width: calc(${(props) => props.sizeOfBoard} * 55px);\n    ${css`\n        grid-template-columns: repeat(${(props) => props.sizeOfBoard}, 1fr);\n        grid-template-rows: repeat(${(props) => props.sizeOfBoard}, 1fr);\n        grid-gap: 5px;\n    `}\n`;\n\nconst Minesweeper = ({ sizeOfBoard, numOfMines }) => {\n  const [isGameStart, setIsGameStart] = useState(false);\n  const [mines, setMines] = useState([[]]);\n  const [isShowGameOver, setIsShowGameOver] = useState(false);\n  const isWin = numOfMines === (sizeOfBoard ** 2 - mines.reduce((sumOfRow, rowOfMines) => sumOfRow + rowOfMines.reduce((sumOfColumn, targetMine) => sumOfColumn + (targetMine.isVisible ? 1 : 0), 0), 0));\n  const modalText = isWin ? 'You win!!' : (isShowGameOver ? 'You clicked the mine!!' : '');\n  const modalOkText = isWin ? 'Play again' : (isShowGameOver ? 'OK' : '');\n\n  const initialBoard = useCallback(() => {\n    let updatedMines = [];\n    for (let i = 0; i < sizeOfBoard; i++) {\n      let lineOfMine = [];\n      for (let j = 0; j < sizeOfBoard; j++) {\n        lineOfMine.push({\n          x: j,\n          y: i,\n          isMine: false,\n          isVisible: false,\n        });\n      }\n      updatedMines.push(lineOfMine);\n    }\n    setMines(updatedMines);\n    setIsShowGameOver(false);\n    setIsGameStart(false);\n  }, [sizeOfBoard]);\n\n  const onStartGame = (x, y) => {\n    let minePool = [];\n    while (minePool.length < numOfMines) {\n      const xOfMine = Math.floor(Math.random() * sizeOfBoard);\n      const yOfMine = Math.floor(Math.random() * sizeOfBoard);\n      if (xOfMine !== x && yOfMine !== y && !minePool.find((coord) => coord.x === xOfMine && coord.y === yOfMine)) {\n        minePool.push({ x: xOfMine, y: yOfMine });\n      }\n    }\n    let updatedMines = [...mines];\n    minePool.forEach((mine) => {\n      updatedMines[mine.y][mine.x] = {\n        ...updatedMines[mine.y][mine.x],\n        isMine: true,\n      };\n    });\n    setMines(updatedMines);\n    setIsGameStart(true);\n    handleNumOfNeighbourMines();\n    onExpandVisibleMine(x, y);\n  };\n\n  const onCloseGame = (x, y) => {\n    console.log(x, y);\n    setIsShowGameOver(true);\n  };\n\n  const handleNumOfNeighbourMines = () => {\n    let updatedMines = [...mines];\n    for (let y = 0; y < sizeOfBoard; y++) {\n      for (let x = 0; x < sizeOfBoard; x++) {\n        let count = 0;\n        (y - 1 >= 0) && (x - 1 >= 0) && mines[y - 1][x - 1].isMine && count++;\n        (y - 1 >= 0) && mines[y - 1][x].isMine && count++;\n        (y - 1 >= 0) && (x + 1 < sizeOfBoard) && mines[y - 1][x + 1].isMine && count++;\n        (y + 1 < sizeOfBoard) && (x - 1 >= 0) && mines[y + 1][x - 1].isMine && count++;\n        (y + 1 < sizeOfBoard) && mines[y + 1][x].isMine && count++;\n        (y + 1 < sizeOfBoard) && (x + 1 < sizeOfBoard) && mines[y + 1][x + 1].isMine && count++;\n        (x - 1 >= 0) && mines[y][x - 1].isMine && count++;\n        (x + 1 < sizeOfBoard) && mines[y][x + 1].isMine && count++;\n        updatedMines[y][x] = {\n          ...mines[y][x],\n          numOfNeighbourMines: count,\n        };\n      }\n    }\n    setMines(updatedMines);\n  };\n\n  const onExpandVisibleMine = (x, y) => {\n    let updatedMines = [...mines];\n    const dx = [1, -1, 0, 0];\n    const dy = [0, 0, 1, -1];\n    let queue = [[y, x]];\n    while (queue.length > 0) {\n      let [yOfQueue, xOfQueue] = queue.shift();\n      const isValid = (xOfQueue >= 0 && xOfQueue < sizeOfBoard && yOfQueue >= 0 && yOfQueue < sizeOfBoard);\n      console.log(yOfQueue, xOfQueue);\n      if (isValid) {\n        if (!(updatedMines[yOfQueue][xOfQueue].numOfNeighbourMines > 0) && !(updatedMines[yOfQueue][xOfQueue].isVisible)) {\n          for (let k = 0; k < dx.length; k++) {\n            queue.push([yOfQueue + dy[k], xOfQueue + dx[k]]);\n          }\n        }\n        updatedMines[yOfQueue][xOfQueue].isVisible = true;\n      }\n    }\n    setMines(updatedMines);\n  };\n\n  useEffect(() => {\n    initialBoard();\n  }, [initialBoard]);\n\n  return (\n    <BoardWrapper sizeOfBoard={ sizeOfBoard }>\n      { mines.map((lineOfMine, row) => lineOfMine.map((mine, column) => <Mine key={ `${column}-${row}` } isWin={ isWin } isGameStart={ isGameStart } onStartGame={ onStartGame } onCloseGame={ onCloseGame } onExpandVisibleMine={ onExpandVisibleMine } sizeOfBoard={ sizeOfBoard } { ...mine } />)) }\n      <Modal text={ modalText } isVisible={ isShowGameOver || isWin } onClick={ () => initialBoard(sizeOfBoard) } okText={ modalOkText } />\n    </BoardWrapper>\n  );\n};\n\nexport default Minesweeper;\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport MinesweeperBoard from '../../components/minesweeper';\n\nconst PageWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 5vh 5vw;\n    background-color: #d1fdac;\n    height: 100vh;\n    .title {\n        font-size: 32px;\n        font-weight: 500;\n        margin: 20px;\n    }\n`;\nconst MinesweeperPage = () => {\n  const [sizeOfBoard] = useState(6);\n  const [numOfMines] = useState(4);\n  return (\n    <PageWrapper>\n      <h1 className=\"title\">Minesweeper</h1>\n      <MinesweeperBoard sizeOfBoard={ sizeOfBoard } numOfMines={ numOfMines } />\n    </PageWrapper>\n  );\n};\n\nexport default MinesweeperPage;\n","import MinesweeperPage from './pages/minesweeper';\n\nconst App = () => {\n  return (\n    <>\n      <MinesweeperPage />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}